name=csm-ehcache-hibernate
#======================================================================================
diskStore.path=java.io.tmpdir/csm/ehcache/hibernate
#======================================================================================
# defaultCache settings
# maxEntriesLocalHeap (required):
#   Sets the maximum number of objects that will be created in memory.  0 = no limit.
#   In practice no limit means Integer.MAX_SIZE (2147483647) unless the cache is distributed with a Terracotta server in which case it is limited by resources.
defaultCache.maxEntriesLocalHeap=10000
# maxEntriesLocalDisk (required):
#   Sets the maximum number of objects that will be maintained in the DiskStore
#   The default value is zero, meaning unlimited.
defaultCache.maxEntriesLocalDisk=100000
# eternal (required):
#   Sets whether elements are eternal. If eternal,  timeouts are ignored and the element is never expired.
defaultCache.eternal=false
# (optional) no need if eternal is true
defaultCache.timeToIdleSeconds=300
# (optional) no need if eternal is true
defaultCache.timeToLiveSeconds=600
# persistence
#   strategy:
#     Configures the type of persistence provided by the configured cache.  This must be one of the following values:
#       localRestartable - Enables the RestartStore and copies all cache entries (on-heap and/or off-heap) to disk. This option provides fast restartability with fault tolerant cache persistence on disk. It is available for Enterprise Ehcache users only.
#       localTempSwap - Swaps cache entries (on-heap and/or off-heap) to disk when the cache is full. "localTempSwap" is not persistent. 
#       none(default) - Does not persist cache entries.
defaultCache.persistence.strategy=localTempSwap
#   synchronousWrites:
#     When set to true write operations on the cache do not return until after the operations data has been successfully flushed to the disk storage.
#     This option is only valid when used with the "localRestartable" strategy, and defaults to false.
#defaultCache.persistence.synchronousWrites=false
#======================================================================================
# query cache settings
# Holding the cached query results
# (required)
StandardQueryCache.maxEntriesLocalHeap=10000
# (required)
StandardQueryCache.maxEntriesLocalDisk=100000
# (required)
StandardQueryCache.eternal=false
# (optional) no need if eternal is true
StandardQueryCache.timeToIdleSeconds=300
# (optional) no need if eternal is true
StandardQueryCache.timeToLiveSeconds=600
StandardQueryCache.persistence.strategy=localTempSwap
# Holding timestamps of the most recent updates to queryable tables. These are used to validate the results as they are served from the query cache.
# If you configure your underlying cache implementation to use expiration, it is very important that the timeout of the underlying cache region for the UpdateTimestampsCache is set to a higher value than the timeouts of any of the query caches.
# In fact, we recommend that the UpdateTimestampsCache region is not configured for expiration (time-based) or eviction (size/memory-based) at all. Note that an LRU (Least Recently Used) cache eviction policy is never appropriate for this particular cache region.
UpdateTimestampsCache.maxEntriesLocalHeap=10000
UpdateTimestampsCache.maxEntriesLocalDisk=100000
UpdateTimestampsCache.eternal=true
UpdateTimestampsCache.persistence.strategy=localTempSwap
#======================================================================================
# entity cache template settings
# (required)
templateCache.maxEntriesLocalHeap=1000
# (required)
templateCache.maxEntriesLocalDisk=10000
# (required)
templateCache.eternal=false
# (optional) no need if eternal is true
templateCache.timeToIdleSeconds=300
# (optional) no need if eternal is true
templateCache.timeToLiveSeconds=600
templateCache.persistence.strategy=localTempSwap
#======================================================================================
# specific entity cache if not using entity cache template
#cache.<entity.getClass().getSimpleName()>.maxEntriesLocalHeap=10000
#cache.<entity.getClass().getSimpleName()>.maxEntriesLocalDisk=100000
#cache.<entity.getClass().getSimpleName()>.eternal=false
#cache.<entity.getClass().getSimpleName()>.timeToIdleSeconds=300
#cache.<entity.getClass().getSimpleName()>.timeToLiveSeconds=600
#cache.<entity.getClass().getSimpleName()>.persistence.strategy=localTempSwap